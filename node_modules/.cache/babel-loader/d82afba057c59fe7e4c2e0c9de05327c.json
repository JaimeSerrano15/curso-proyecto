{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documents/React_Feed-ReactCourse2020/src/components/NewPost.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Component } from 'react';\nimport NavFeed from './Feed/NavFeed';\nconst initState = {\n  title: \"\",\n  text: \"\",\n  image: \"\",\n  errorFlag: false\n};\nconst token = localStorage.getItem(\"token\");\nconst username = \"\";\n\nclass newPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUsername = () => {\n      let config = {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'Application/json',\n          authorization: `Bearer ${this.state.token}`\n        }\n      };\n      fetch('https://reactcourseapi.herokuapp.com/user/name', config).then(res => res.json()).then(data => {\n        username: data.username || '';\n      });\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const npost = {\n        title: this.state.title,\n        text: this.state.text,\n        image: this.state.image\n      };\n      let config = {\n        method: 'POST',\n        headers: {\n          authorization: `Bearer ${token}`,\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(npost)\n      };\n      fetch('https://reactcourseapi.herokuapp.com/post', config).then(res => {\n        if (res.ok) {\n          res.json().then(data => {\n            this.setState({ ...initState\n            });\n          });\n        } else {\n          this.setState({\n            errorFlag: true\n          });\n        }\n      });\n    };\n\n    this.state = { ...initState\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavFeed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"full-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Nuevo Post\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"T\\xEDtulo:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"title\",\n      onChange: this.changeHandler,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Texto:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"text\",\n      onChange: this.changeHandler,\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Link de la imagen:\", React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"image\",\n      onChange: this.changeHandler,\n      value: this.state.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"user-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.props.history.push('/login');\n      },\n      type: \"button\",\n      className: \"btn btn-outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Subir Post\"))), this.state.errorFlag && React.createElement(\"div\", {\n      className: \"alert alert-dismissible alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Oh snap!\"), \" Hubo un error en la creaci\\xF3n de un nuevo post.\"))));\n  }\n\n}\n\nexport default withRouter(newPost);","map":{"version":3,"sources":["/home/jaime/Documents/React_Feed-ReactCourse2020/src/components/NewPost.js"],"names":["React","withRouter","Component","NavFeed","initState","title","text","image","errorFlag","token","localStorage","getItem","username","newPost","constructor","props","fetchUsername","config","method","headers","authorization","state","fetch","then","res","json","data","changeHandler","event","setState","target","id","value","submitHandler","preventDefault","npost","body","JSON","stringify","ok","render","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { Component } from 'react';\nimport NavFeed from './Feed/NavFeed';\n\nconst initState = {\n    title: \"\",\n    text: \"\",\n    image: \"\",\n    errorFlag: false,\n}\n\nconst token = localStorage.getItem(\"token\");\nconst username = \"\";\n\nclass newPost extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            ...initState,\n        }\n    }\n\n    fetchUsername = () => {\n        let config = {\n            method: \"GET\",\n            headers: {\n                'Content-type': 'Application/json',\n                authorization: `Bearer ${this.state.token}`\n            }\n        }\n    \n        fetch('https://reactcourseapi.herokuapp.com/user/name', config)\n            .then(res => res.json())\n            .then(data => {\n                    username: data.username || ''\n            })\n      }\n\n    changeHandler = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value,\n        })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        const npost = {\n            title: this.state.title,\n            text: this.state.text,\n            image: this.state.image,\n        }\n\n        let config = {\n            method : 'POST',\n            headers: {\n                authorization: `Bearer ${token}`,\n                'Content-type': 'Application/json'\n            },\n            body : JSON.stringify(npost),\n        };\n\n        fetch('https://reactcourseapi.herokuapp.com/post', config)\n            .then(res => {\n                if(res.ok){\n                    res.json()\n                    .then(data => {\n                        this.setState({\n                            ...initState,\n                        })\n                    })\n                }else{\n                    this.setState({\n                        errorFlag: true,\n                    })\n                }\n            })\n    }\n\n    render(){\n        return(\n            <>\n            <NavFeed>\n\n            </NavFeed>\n                <div className=\"full-centered\">\n\t\t\t\t<div className = \"jumbotron\">\n\t\t\t\t\t<h1 className=\"display-3\">Nuevo Post</h1>\n\t\n\t\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label>Título: \n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\ttype = \"text\" \n\t\t\t\t\t\t\t\t\tid = \"title\" \n\t\t\t\t\t\t\t\t\tonChange = {this.changeHandler}\n\t\t\t\t\t\t\t\t\tvalue = {this.state.title}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\n\t\t\t\t\t\t\t<label>Texto: \n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\ttype = \"text\" \n\t\t\t\t\t\t\t\t\tid = \"text\" \n\t\t\t\t\t\t\t\t\tonChange = {this.changeHandler}\n\t\t\t\t\t\t\t\t\tvalue = {this.state.text}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\n\t\t\t\t\t\t\t<label>Link de la imagen: \n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\ttype = \"text\" \n\t\t\t\t\t\t\t\t\tid = \"image\" \n\t\t\t\t\t\t\t\t\tonChange = {this.changeHandler}\n\t\t\t\t\t\t\t\t\tvalue = {this.state.image}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"user-btns\">\n\t\t\t\t\t\t\t<button onClick={()=>{this.props.history.push('/login')}} type=\"button\" className=\"btn btn-outline-info\"></button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" type=\"submit\">Subir Post</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t{this.state.errorFlag && \n\t\t\t\t\t\t<div className=\"alert alert-dismissible alert-danger\">\n\t  \t\t\t\t\t\t<strong>Oh snap!</strong> Hubo un error en la creación de un nuevo post.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n            </>\n        );\n    }\n}\n\nexport default withRouter(newPost);"]},"metadata":{},"sourceType":"module"}